问题一:Vuecli脚手架,是如何解析.vue中的style样式的,请说明过程
回答:
	1.通过webpack调用vue-loader,去解析vue文件,可以从中得到style标签的内容
	2.调用scss-loader,将style内部的scss代码解析为css代码
	3.调用css-loader,将css代码编译成js代码
	4.调用style-loader,将js版本的css代码通过style标签插入至页面上
	总结:由于该方法创建了style标签插入至页面,导致只要经过该组件之后,
		该组件的所有样式在页面中变成了公共样式,很可能影响到其他组件的样式

问题二:那么,如何让每个组件的样式,不影响到其他组件?
回答:	通过给当前组件的style标签上添加scoped属性,可以让当前内部的样式,只作用于当前组件

问题三:scoped的作用范围
回答:	写上了scoped的样式,只能作用域当前组件和内部子组件的根节点

问题四:scoped是如何做到样式具有作用域效果的
回答	
	1.给当前组件中所有的标签添加上唯一的hash值,作为标签属性
	2.给每个样式都添加上hash值,实现将hash作为属性选择器来匹配对应的标签
	注意:他只会给最内层的样式添加hash值

问题五:那么,既然scoped会生成css作用域,如何穿透该作用域
回答:	给样式添加深度选择器即可(简单理解就是个样式前缀)
	1.>>>	给原生css使用(stylus)
	2./deep/	给less使用(以前sass可以用,但是现在不行了)
	3.::v-deep	给less和sass使用

问题六:深度选择器是如何实现该效果的?
回答:	会将原本添加在最内层样式上的hash值交给深度选择器之前的类名(变成了后代选择器)